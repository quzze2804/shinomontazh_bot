from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime

@dp.message_handler(commands=['mybooking'])
async def my_booking(message: types.Message):
    user_id = message.from_user.id
    booking = next((b for b in bookings if b["user_id"] == user_id), None)

    if booking:
        date_str = booking["datetime"].strftime('%Y-%m-%d %H:%M')
        kb = InlineKeyboardMarkup().add(
            InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å", callback_data="cancel_booking"),
            InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å", callback_data="reschedule_booking")
        )
        await message.answer(f"üîî –£ —Ç–µ–±–µ —î –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å –Ω–∞:\nüìÖ {date_str}", reply_markup=kb)
    else:
        await message.answer("‚ÑπÔ∏è –£ —Ç–µ–±–µ –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É.")

@dp.callback_query_handler(lambda c: c.data == "cancel_booking")
async def cancel_booking(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    global bookings
    bookings = [b for b in bookings if b["user_id"] != user_id]
    await callback.message.edit_text("‚ùå –¢–≤—ñ–π –∑–∞–ø–∏—Å –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –Ø–∫—â–æ –∑–º—ñ–Ω–∏—à –¥—É–º–∫—É ‚Äî –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –æ–±—Ä–∞—Ç–∏ –Ω–æ–≤–∏–π —á–∞—Å.")

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

class RescheduleState(StatesGroup):
    choosing_time = State()

@dp.callback_query_handler(lambda c: c.data == "reschedule_booking")
async def reschedule_start(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(RescheduleState.choosing_time)
    await callback.message.edit_text("üîÑ –î–æ–±—Ä–µ! –û–±–µ—Ä–∏ –Ω–æ–≤–∏–π —á–∞—Å –¥–ª—è –∑–∞–ø–∏—Å—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤:")
    # –¢—É—Ç –º–æ–∂–µ—à –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —á–∞—Å—É

